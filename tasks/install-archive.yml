---
- name: Pull eXist archive from remote (install remote archive)
  get_url:
    url: "{{ exist_baseurl }}/{{ exist_archive }}"
    dest: "{{ exist_home }}/tmp/{{ exist_archive }}"
    owner: "{{ exist_instuser }}"
    group: "{{ exist_group }}"
  when: exist_install_method == "remote_archive"
  tags:
    - install
    - arch-install

- name: Push eXist archive to host (install local archive)
  copy:
    src: "{{ exist_local_archive_dir }}/{{ exist_archive }}"
    dest: "{{ exist_home }}/tmp/{{ exist_archive }}"
    owner: "{{ exist_instuser }}"
    group: "{{ exist_group }}"
  when: exist_install_method == "local_archive"
  tags:
    - install
    - arch-install

# need to jump hoops because the top level dir name in the archive is not
# predictable
- name: Determine source code revision in archive to install (4.x)
  shell: "vtxt=`tar ztf {{ exist_home }}/tmp/{{ exist_archive }} | grep -E 'VERSION.txt$'`; tar zxf {{ exist_home }}/tmp/{{ exist_archive }} $vtxt -O | grep scm.revision | sed -e 's/scm.revision=//;'"
  register: archive_revision
  when: exist_major_version == 4
  changed_when: false
  check_mode: false
  tags:
    - install
    - arch-install
    - exist4

- name: Set exist_archive_revision fact
  set_fact:
    exist_archive_revision: "{{ archive_revision.stdout }}"
  when: exist_major_version == 4
  tags:
    - install
    - arch-install
    - exist4

# need to jump hoops because the relevant info is packed inside a jar file
- name: Extract exist-core jar from archive to install (5.x or higher)
  unarchive:
    src: "{{ exist_home }}/tmp/{{ exist_archive }}"
    dest: "{{ exist_home }}/tmp"
    remote_src: yes
    owner: "{{ exist_instuser }}"
    group: "{{ exist_group }}"
    extra_opts: [ '--transform=s:^[^/]\+:{{ exist_instname }}:;', '--wildcards', '*exist-core*jar' ]
  when: exist_major_version > 4
  tags:
    - install
    - arch-install
    - exist5

- name: Determine source code revision in archive to install (5.x or higher)
  shell: "unzip -p {{ exist_home }}/tmp/{{ exist_instname }}/lib/exist-core*jar org/exist/system.properties | grep git-commit= | sed -e 's/git-commit=//;'"
  register: archive_revision
  changed_when: false
  check_mode: false
  args:
  when: exist_major_version > 4
  tags:
    - install
    - arch-install
    - exist5

- name: Set exist_archive_revision fact
  set_fact:
    exist_archive_revision: "{{ archive_revision.stdout }}"
  when: exist_major_version > 4
  tags:
    - install
    - arch-install
    - exist5

- name: Set fact whether to replace an installed eXist
  set_fact:
    exist_replace_installation: yes
  # if exist is installed AND the archive revision is different from installed
  when:
    - exist_is_installed|bool
    - exist_archive_revision != ansible_local[exist_instname]['exist_revision']
  tags:
    - install
    - arch-install

- name: Debug1
  debug:
    msg: "installed: {{ exist_is_installed }} running: {{ ansible_local[exist_instname]['exist_running'] }} gitsrc: {{ ansible_local[exist_instname]['exist_gitsrc'] }} rev: {{ ansible_local[exist_instname]['exist_revision'] }} remote_ref: {{ exist_archive_revision }} replace: {{ exist_replace_installation }}"
  tags:
    - install
    - arch-install

- name: Include stop and backup tasks if installing a different eXist
  include_tasks: stop-and-backup.yml
  when: exist_replace_installation|bool
  tags:
    - always

- name: Install exist archive
  unarchive:
    src: "{{ exist_home }}/tmp/{{ exist_archive }}"
    dest: "{{ exist_home }}"
    remote_src: yes
    owner: "{{ exist_instuser }}"
    group: "{{ exist_group }}"
    #creates: "{{ exist_path }}/VERSION.txt"   # 4.x
    #creates: "{{ exist_path }}/etc/conf.xml"  # 5.x
    extra_opts: [ '--transform=s:^[^/]\+:{{ exist_instname }}:;' ]
  when: not exist_is_installed|bool or exist_replace_installation|bool
  tags:
    - install
    - arch-install
