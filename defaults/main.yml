---
# basic config settings, exist gets installed into $exist_home/$exist_dir
exist_user: existdb
exist_group: existdb
exist_home: /usr/local/existdb
exist_dir: existdb

# for multiple eXist-db instances on a single host, assign an individual
# instance name to each one. No spaces, umlauts or special chars!
# if you're not running multiple instances the default is fine
exist_instname: 'exist'
#exist_instname: 'exist-test'
#exist_instname: 'exist-prod'

# if you run multiple eXist-db instances on a single host, you may want to run
# each of them as a different user.
# if you're not running multiple instances the default is fine
exist_instuser: 'existdb'
#exist_instuser: 'tester'
#exist_instuser: 'customer1'

# if you run multiple eXist-db instances on a single host, you may want to give
# each of them a descriptive comment.
# if you're not running multiple instances the default is fine
# this variable is only used by reporting tools and not required for operation
exist_instdescription: ''
#exist_instdescription: 'testing'
#exist_instdescription: 'production'

# for reference, but don't force anyone to localhost by default
#exist_http_host: '127.0.0.1'
#exist_ssl_host: '127.0.0.1'
exist_http_port: 8080
exist_ssl_port: 8443

# memory settings
exist_mem_init_heap: 2048
exist_mem_max_heap: 2048
exist_mem_max_meta: 1024
exist_mem_max_direct: 1024

# special memory/GC settings
exist_mem_gc: 'g1'
exist_mem_g1gc_pausegoal: 200
exist_mem_numa_enable: no
exist_mem_gcdebug_enable: no
exist_mem_nmt_enable: no
exist_mem_strdedup_enable: yes
exist_mem_niocachetune_enable: no

# OOM memory settings
exist_mem_exitoom_enable: yes
exist_mem_dumpoom_enable: no

# because eXist-db 5.0 introduces many changes in its filesystem layout that
# affect Ansible operation, we use this variable as an indicator for Ansible
# processing. Expected values:
# - 4     eXist-db 4.x
# - 5     eXist-db 5.x
exist_major_version: 4

# exist install method: "source", "remote_archive", "local_archive", "none"
exist_install_method: source

# git settings (for exist_install_method == "source")
exist_repo: https://github.com/eXist-db/exist.git
exist_repo_version: develop-4.x.x
exist_repo_refspec: "+refs/pull/*:refs/remotes/origin/pull/*"
exist_repo_update: yes
exist_repo_force: yes

# archive filename (for exist_install_method == "remote_archive" or "local_archive")
exist_archive: "eXist-4.2.0-201806071027.tar.gz"

# archive download base URI (for exist_install_method == "remote_archive")
exist_baseurl: "http://dl.example.com/files/"

# local archive dir (for exist_install_method == "local_archive")
exist_local_archive_dir: "/tmp"

# whether to backup the previous exist installation
exist_backup_previnstall: yes

# whether to restore the previous data directory after re-installation
exist_restore_prevdata: yes

# how long to wait for exist to come up before raising an error
exist_startup_timeout: 300

# which config files to generate from Ansible
exist_wrapperconf_from_template: yes
exist_jettyconf_from_template: yes
exist_logconf_from_template: no
exist_clientprops_from_template: yes
# XXX these are not fully supported yet, leave as is!
exist_confxml_from_template: no
exist_webxml_from_template: no

# used to increase file descriptor limits for the user running eXist
exist_fdset_enable: yes
exist_fdsoft_limit: 8192
exist_fdhard_limit: 16384

# used for kernel memory tuning for edge cases
exist_kerneltune_enable: no
exist_kerneltune_swappiness: 10
exist_kerneltune_cachepressure: 50

# enable and define loghost for logging to a central syslog server,  default
# logging to local files only.
exist_syslog_enable: no
exist_syslog_loghost: 127.0.0.1

# how many days should local log files be kept before they are deleted
exist_log_retention_days: 30

# list of (pre-existing) Unix users that this role should not modify
exist_prohibit_usermod: []

# defaults for config file settings
exist_wrapper_relclasspath: "classes"
exist_wrapper_loglevel: INFO
exist_wrapper_startup_timeout: 90
exist_wrapper_shutdown_timeout: 90
exist_wrapper_ping_timeout: 90
exist_confxml_dbconn_cachesize: "256M"
exist_confxml_trigger_xquerystartup_enable: no
exist_confxml_trigger_autodeploy_enable: yes
exist_confxml_trigger_restxq_enable: false
exist_confxml_pool_max: 20
exist_confxml_recovery_enabled: "yes"
exist_confxml_recovery_consistency_check: "yes"
exist_confxml_job_check1_enable: no
exist_confxml_job_check1_backup: "yes"
exist_confxml_job_check1_cron_trigger: "0 0 0 * * ?"
exist_confxml_job_check1_output: "export"
exist_confxml_job_twitter_enable: no
exist_confxml_job_cleansso_enable: no
exist_confxml_lock_table_disabled: "false"
exist_confxml_serializer_indent: "yes"
exist_webxml_initparam_hidden: "true"

# installation customization
exist_custom_install: no

# admin password and user accounts/passwords.  these are confidential and
# should be kept in an Ansible vault, not in this file.  Listed here for
# reference only.
#
#exist_adminpass:
#  myserver1:
#    myinstanceA: MySecretPass
#    myinstanceB: DifferentPass
#  myserver2:
#    exist: MyDefaultPass
#  myserver3:
#    unprotected: ""
#
# NOTE: the last entry for each host/instance MUST NOT have a trailing comma!!
#exist_userpass_map:
#  myserver1:
#    myinstance1: |
#      map:entry("eXide", "thispassword"),
#      map:entry("guest", "guestpass"),
#      map:entry("SYSTEM", "wonttell")
#  myserver2:
#    myinstance2: |
#      map:entry("eXide", "thatpassword"),
#      map:entry("guest", "guestpass"),
#      map:entry("extrauser", "secret")

# relative paths to config files and dirs, different for eXist 4.x and 5.x
# indexed by exist_major_version (4 or 5)
exist_confpaths:
  4:
    wrapper_conf: 'tools/yajsw/conf/wrapper.conf'
    conf_xml: 'conf.xml'
    web_xml: 'webapp/WEB-INF/web.xml'
    log4j2_xml: 'tools/yajsw/conf/log4j2.xml'
    client_properties: 'client.properties'
    data_basedir: 'webapp/WEB-INF'
    log_dir: 'webapp/WEB-INF/logs'
    jetty_etc: 'tools/jetty/etc'
  5:
    conf_xml: 'etc/conf.xml'
    web_xml: 'etc/webapp/WEB-INF/web.xml'
    log4j2_xml: 'etc/log4j2.xml'
    client_properties: 'etc/client.properties'
    data_basedir: ''
    log_dir: 'logs'
    jetty_etc: 'etc/jetty'
  6:
    conf_xml: 'etc/conf.xml'
    web_xml: 'etc/webapp/WEB-INF/web.xml'
    log4j2_xml: 'etc/log4j2.xml'
    client_properties: 'etc/client.properties'
    data_basedir: ''
    log_dir: 'logs'
    jetty_etc: 'etc/jetty'

# for exist utils installed in the system path
exist_system_utildir: '/usr/local/bin'

# for CentOS 7, Amazon Linux
exist_redhat_extra_packages:
  # to handle .jar and .xar archives
  - unzip
  # to handle .bz2 archives, not installed by default
  - bzip2
  # for Ansible synchronize
  - rsync
  # for source install
  - patch

# for Debian 8
exist_debian_extra_packages:
  # to handle .jar and .xar archives
  - unzip
  # for uuidgen, not installed by default
  - uuid-runtime
  # for Ansible synchronize
  - rsync
  # for source install
  - patch

# for Ubuntu (xenial or later)
exist_ubuntu_extra_packages:
  # to handle .jar and .xar archives
  - unzip
  # for uuidgen, not installed by default
  - uuid-runtime
  # for Ansible
  - acl
  - python3-lxml
  ## for python2 only
  #- python-lxml
  - rsync
  # for source install
  - patch
  # for WebDAV and debugging
  - davfs2

xar_install: []
xar_install_defaults: "{{ exist_xar_patch_xml_defaults }}"

exist_mvn_options: "-D skipTests -D docker=false -P '!build-dist-archives,!mac-dmg-on-mac,!codesign-mac-dmg,!mac-dmg-on-unix,!installer,!concurrency-stress-tests,!micro-benchmarks'"

exist_xar_patch_xml_defaults: { src_archive_ext: 'xar', target_archive_suffix: '', namespaces: { "xmlns": "http://exist-db.org/collection-config/1.0" }, xpath: "/xmlns:collection", state: "present", add_children: "{{ exist_replication_trigger_template }}" }

exist_replication_destination: "dynamicTopics/default"
exist_replication_enable: false
exist_replication_host: "127.0.0.1"
exist_replication_port: "61616"
exist_replication_trigger_template: |
  <!-- Replication -->
  <triggers>
    <trigger class="org.exist.jms.replication.publish.ReplicationTrigger">
      <parameter name="java.naming.factory.initial" value="org.apache.activemq.jndi.ActiveMQInitialContextFactory"/>
      <parameter name="java.naming.provider.url" value="failover:tcp://{{ exist_replication_host }}:{{ exist_replication_port }}"/>
      <parameter name="connection-factory" value="ConnectionFactory"/>
      <parameter name="destination" value="{{ exist_replication_destination }}"/>
    </trigger>
  </triggers>

exist_xar_path: "/usr/local/existdb/xars/"
